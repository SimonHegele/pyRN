name: Continuous Delivery

on:
  - push

defaults:
  run:
    shell: bash -l {0}

jobs:
  build_linux:
    name: "linux Tests"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
            node-version: '16.x'
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: setup-and-build
        run: ./setup.sh
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: README.md
          draft: false
          prerelease: false
      
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/azblogfilter.linux-amd64.tar.gz
          asset_name: azblogfilter.linux-amd64.tar.gz
          asset_content_type: application/gzip
  build_windows:
    name: "Windows Tests"
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
            node-version: '16.x'
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: setup-and-build
        run: ./setup.sh
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: README.md
          draft: false
          prerelease: false

      - name: upload windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/azblogfilter.windows-amd64.zip
          asset_name: azblogfilter.windows-amd64.zip
          asset_content_type: application/zip
  build_macos:
    name: "MacOS Tests"
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
            node-version: '16.x'
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      
      - name: setup-and-build
        run: ./setup.sh
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: README.md
          draft: false
          prerelease: false
      - name: upload darwin artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/azblogfilter.darwin-amd64.tar.gz
          asset_name: azblogfilter.darwin-amd64.tar.gz
          asset_content_type: application/gzip